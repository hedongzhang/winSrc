本文档负责对AutoCoding工具的说明

======================================================
1、 ./conf/config.int

	主要的配置文件
		(1)配置基本信息（键可以重复，以最后一个为准）
		(2)配置需要加载的服务（以 “@ServiceTemplate” 为关键字，需要加载多少服务，就配置多少）
		(3)配置需要加载的代码模板（以“@CodeTemplate”为关键字，需要加载多少代码模板，就配置多少）
	例如：
	#作者                            ——#为注释
	
	@AUTOR         ——@后为键
	HDZhang123     ——为值
	
	@ServiceTemplate             需要加载的服务模板
	./template/service2.tmp
	
	@CodeTemplate                需要加载的代码模板
	./template/head_template/head_template1.tmp
	
	@@          ——文件结束符
======================================================

======================================================
2、 ./conf/service/service.ini

	服务配置文件
		(1)配置基本信息（键可以重复，以第一个为准）
		(2)配置<输入输出字段的配置文件>的路径（<以“@FIELDS@”为关键字，可选，若存在此配置则程序优先读取配置的文件的字段信息，不走默认解析sql逻辑）
		(3)配置输入输出节点：如果无节点，则以NULL标记，如（@INPUT_NODE@ NULL）
			***这个节点会加入到输入输出节点的动态数组里面***
					vector<Field> inputFields;   //输入字段
					vector<Field> outputFields;  //输出字段

	例如：
	@AUTOR@      ——替换关键字
	HDZhang      ——替换值
	
	
	@FIELDS@                      ——输入输出字段的配置文件路径
	./conf/field/field1.ini  
	
	@INPUT_NODE@                  ——无输入节点
	NULL
======================================================

======================================================
3、 ./conf/field/field.ini

	字段配置文件
		(1)固定配置（键为：@INPUT_BIND_FIELD@、@OUTPUT_BIND_FIELD@，键后面每一行为一个字段，不区分大小写）
		(2)每行配置字段后面可跟一个数字，标示字段大小
	例如：
		@INPUT_BIND_FIELD@ 1(标示sql绑定字段个数)***因为sql绑定字段个数与需要获取字段个数有时不一致***
		latn_id
		acc_nbr 2048（字段大小）

		@OUTPUT_BIND_FIELD@ 5(标示sql返回字段个数)
		LATN_ID 
		ACC_NBR
======================================================

======================================================
4、 ./template/head_template/head_template1.tmp

	头文件模板
	
	例如：
	@AUTOR@      ——替换处对应键
======================================================

======================================================
5. src_template.tmp

	源文件模板

	例如：
	@CLASSNAME@      ——替换处对应键
======================================================

======================================================
6. 其他说明

	如果在crmdem.fml32中出入参数字段为fml32 类型，或者出入节点字段为string或者long类型，则默认在其名称后面加“_NEW”,然后写入crmdem.fml32文件